// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFinal.Data;

#nullable disable

namespace ProjetoFinal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231218204721_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("NotaAluno", b =>
                {
                    b.Property<int>("NotaID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlunoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("NotaID", "AlunoID");

                    b.HasIndex("AlunoID");

                    b.ToTable("NotasEAlunos", (string)null);
                });

            modelBuilder.Entity("ProjetoFinal.Model.AlunoModel", b =>
                {
                    b.Property<int?>("AlunoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Diagnostico")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("AlunoID");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("ProjetoFinal.Model.NotaModel", b =>
                {
                    b.Property<int?>("NotaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Atividade")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Prova1")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Prova2")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Trabalho")
                        .HasColumnType("TEXT");

                    b.HasKey("NotaID");

                    b.ToTable("Notas", (string)null);
                });

            modelBuilder.Entity("ProjetoFinal.Model.PlanejamentoModel", b =>
                {
                    b.Property<int?>("PlanejamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("PlanejamentoID");

                    b.ToTable("Planejamentos", (string)null);
                });

            modelBuilder.Entity("ProjetoFinal.Model.ProfessorModel", b =>
                {
                    b.Property<int?>("ProfessorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("ProfessorID");

                    b.ToTable("Professores", (string)null);
                });

            modelBuilder.Entity("NotaAluno", b =>
                {
                    b.HasOne("ProjetoFinal.Model.AlunoModel", null)
                        .WithMany()
                        .HasForeignKey("AlunoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoFinal.Model.NotaModel", null)
                        .WithMany()
                        .HasForeignKey("NotaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
